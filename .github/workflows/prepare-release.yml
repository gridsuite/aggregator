name: Prepare release
on:
  workflow_dispatch:
    inputs:
      repos_to_release:
        description: "Manual list of repositories to release (.github/config/repos-to-release.txt content if left empty)"
        default: ""
        required: false
      target_date:
        description: "Date of last commit to inlude (ISO 8601, ex: 2024-09-13T23:59:59Z - default : last friday 23:59:59)."
        required: false

jobs:
  list-shas:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout aggregator repository
        uses: actions/checkout@v4
        with:
          submodules: false
          ref: release-workflow

      - name: Auth GH CLI
        run: echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

      - name: Load repo list from file or input
        id: load_repos
        run: |
          if [[ -z "${{ github.event.inputs.repos_to_release }}" ]]; then
            echo "ℹ️ No user input → load .github/config/repos-to-release.txt"
            list="$(cat .github/config/repos-to-release.txt)"
          else
            echo "ℹ️ Input found → load user input"
            list="${{ github.event.inputs.repos_to_release }}"
          fi
          echo "list<<EOF" >> $GITHUB_OUTPUT
          echo "$list" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Extract last commit date (last friday 23:59 UTC if left empty)
        id: date
        run: |
          if [ -z "${{ github.event.inputs.target_date }}" ]; then
            date_value=$(date -u -d "last friday 23:59" +"%Y-%m-%dT%H:%M:%SZ")
          else
            date_value="${{ github.event.inputs.target_date }}"
          fi
          echo "date_value=$date_value" >> $GITHUB_OUTPUT
          echo "This limit date will be used : $date_value"

      - name: Lister les SHAs des commits
        run: |
          while read url; do
              if [[ "$url" =~ github.com[:/]+([^/]+)/([^/]+)(\.git)?$ ]]; then
                  org="${BASH_REMATCH[1]}"
                  repo="${BASH_REMATCH[2]}"
                  repo="${repo%.git}"
              else
                  echo "❌ Could not parse repository url : $url"
                  continue
              fi
              commit=$(gh api repos/$org/$repo/commits \
                --method GET \
                -f until="2025-09-12T23:59:00Z" \
                -F per_page=1 \
                --jq '.[0] | {sha: .sha, message: .commit.message}')

              sha=$(echo "$commit" | jq -r .sha | cut -c1-7)
              msg=$(echo "$commit" | jq -r .message | head -n1 | cut -c1-60)

              if [[ -z "$sha" || "$sha" == "null" ]]; then
                  echo "❌ Aucun commit trouvé pour $repo avant last friday"
                  continue
              fi

              echo "✅ $repo → $sha | $msg"
          done <<< "${{ steps.load_repos.outputs.list }}"